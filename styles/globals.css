@import "tailwindcss";
/* === Font Imports (Google Fonts) === */


@keyframes spin {
  to { transform: rotate(1turn); }
}

@keyframes image-glow {
  0% { opacity: 0; animation-timing-function: cubic-bezier(0.74,0.25,0.76,1); }
  10% { opacity: 0.7; animation-timing-function: cubic-bezier(0.12,0.01,0.08,0.99); }
  to { opacity: 0.4; }
}

@keyframes fade-in {
  0% { opacity: 0; transform: translateY(-10px); }
  to { opacity: 1; transform: none; }
}

@keyframes fade-up {
  0% { opacity: 0; transform: translateY(20px); }
  to { opacity: 1; transform: none; }
}
@keyframes slideUp {
  from { opacity: 0; transform: translateY(25px); }
  to { opacity: 1; transform: translateY(0); }
}

.animate-fadeInSlow {
  animation: fadeIn 1.3s ease forwards;
}

.animate-slideUp {
  animation: slideUp 0.9s ease forwards;
}
@keyframes shimmer {
  0%, 90%, to { background-position: calc(-100% - var(--shimmer-width)) 0; }
  30%, 60% { background-position: calc(100% + var(--shimmer-width)) 0; }
}

@keyframes marquee {
  0% { transform: translateX(0); }
  to { transform: translateX(calc(-100% - var(--gap))); }
}

@keyframes marquee-vertical {
  0% { transform: translateY(0); }
  to { transform: translateY(calc(-100% - var(--gap))); }
}

/* -----------------------------------------------------------
   Animation helper classes (use with inline --animation-delay if needed)
   ----------------------------------------------------------- */
:root { --animate-spin: spin 1s linear infinite; }

.animate-fade-in { animation: fade-in 1s var(--animation-delay, 0s) ease forwards; }
.animate-fade-up { animation: fade-up 1s var(--animation-delay, 0s) ease forwards; }
.animate-marquee { animation: marquee var(--duration) infinite linear; }
.animate-marquee-vertical { animation: marquee-vertical var(--duration) linear infinite; }
.animate-shimmer { animation: shimmer 8s infinite; }
.animate-spin { animation: var(--animate-spin); }

/* -----------------------------------------------------------
   Small utility from your generated CSS
   ----------------------------------------------------------- */
@layer components {
  .all-\[unset\] { all: unset; }
}

/* -----------------------------------------------------------
   Design system tokens (light + dark) — kept from generated snippet
   ----------------------------------------------------------- */
  @layer base {
  body {
    background: var(--color-bg);
    color: hsl(var(--foreground));
    font-family: 'Poppins', system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial;
  }

  h1, h2, h3, h4 {
    font-family: 'Preahvihear', sans-serif;
  }
}

@layer base {
   

   :root{
    /* light mode HSL tokens (kept as in Anima) */
    --background: 0 0% 100%;
    --foreground: 222.2 47.4% 11.2%;

    --muted: 210 40% 96.1%;
    --muted-foreground: 215.4 16.3% 46.9%;

    --popover: 0 0% 100%;
    --popover-foreground: 222.2 47.4% 11.2%;

    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;

    --card: transparent;
    --card-foreground: 222.2 47.4% 11.2%;

    --primary: 222.2 47.4% 11.2%;
    --primary-foreground: 210 40% 98%;

    --secondary: 210 40% 96.1%;
    --secondary-foreground: 222.2 47.4% 11.2%;

    --accent: 210 40% 96.1%;
    --accent-foreground: 222.2 47.4% 11.2%;

    --destructive: 0 100% 50%;
    --destructive-foreground: 210 40% 98%;

    --ring: 215 20.2% 65.1%;

    --radius: 0.5rem;

    /* extra tokens from your design */
    --color-bg: #11071F;
    --color-header: #1A0B2E;
    --color-glow: #763CAC;
    --color-glow-fade: rgba(50,15,133,0);
    --glass-blur: 32px;
  }

  /* dark mode token overrides (class-based dark mode) */
  .dark {
    --background: 224 71% 4%;
    --foreground: 213 31% 91%;

    --muted: 223 47% 11%;
    --muted-foreground: 215.4 16.3% 56.9%;

    --accent: 216 34% 17%;
    --accent-foreground: 210 40% 98%;

    --popover: 224 71% 4%;
    --popover-foreground: 215 20.2% 65.1%;

    --border: 216 34% 17%;
    --input: 216 34% 17%;

    --card: transparent;
    --card-foreground: 213 31% 91%;

    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 1.2%;

    --secondary: 222.2 47.4% 11.2%;
    --secondary-foreground: 210 40% 98%;

    --destructive: 0 63% 31%;
    --destructive-foreground: 210 40% 98%;

    --ring: 216 34% 17%;

    --radius: 0.5rem;
  }

  /* set sensible default body styles using variables (Tailwind utilities will still work) */
  html, body, #__next { height: 100%; }
  body {
    /* Prefer using hsl() tokens from Tailwind config if you mapped them there,
       but using CSS variables here is safe as fallback */
    background: var(--color-bg);
    color: hsl(var(--foreground));
    font-family: 'Poppins', system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
}

/* -----------------------------------------------------------
   Small "component" utilities for your design (radial glow, card glass)
   These were suggested earlier — keep them in globals for convenience.
   ----------------------------------------------------------- */
@layer utilities {
  .radial-glow {
    background: radial-gradient(circle at center, var(--color-glow) 0%, var(--color-glow-fade) 100%);
    pointer-events: none;
  }
  .radial-glow--soft { opacity: 0.55; filter: blur(30px); }
  .radial-glow--strong { opacity: 0.95; filter: blur(48px); }

  .card-glass {
    background: linear-gradient(95deg, rgba(19,4,40,0.6), rgba(38,16,67,0.6));
    box-shadow: 4px 7px 26px rgba(0,0,0,0.12);
    border-radius: 14px;
    border: 1px solid rgba(105,59,147,0.12);
    backdrop-filter: blur(var(--glass-blur));
    -webkit-backdrop-filter: blur(var(--glass-blur));
  }

  .glow-underline {
    text-decoration: underline;
    text-decoration-color: #9857D3; /* accent */
    text-decoration-thickness: 2px;
  }
}

/* -----------------------------------------------------------
   Helper: apply border color to all elements if generator expected it
   (if you don't want this globally, remove it)
   ----------------------------------------------------------- */
@layer base {
  * { box-sizing: border-box; }
}
/* hide Next.js dev overlay icon(s) — broad selectors to cover versions */
/* Hide any Next.js dev overlay or icon completely */
#__next-build-watcher,
div[id^="__next-build-watcher"],
.nextjs-portal,
.nextjs-dev-overlay,
.next-dev-indicator,
.next-dev-icon,
.nextjs-icon,
[data-nextjs-devtool],
[data-nextjs-overlay],
[aria-label*="Next"] {
  display: none !important;
  visibility: hidden !important;
  pointer-events: none !important;
}

